plugins {
	id 'org.springframework.boot' version '2.2.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
}

group = 'com.mikhail'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

ext {
	mapstructVersion = '1.3.0.Final'
	swaggerVersion = '2.9.2'
	junitVersion = '5.5.1'
	hibernetVersion = '5.4.10.Final'
	keycloakVersion = '8.0.1'
	liquibase_hibernate5_versionersion = '3.6'
	archunit_junit5_version = '0.12.0'

	generatedMainJava = "${buildDir}/generated/main/java"
}

test {
	useJUnitPlatform()
}

liquibase {
	activities {
		main {
			driver ""
			url ""
			username "cinema"
			password ""
			changeLogFile "src/main/resources/config/liquibase/master.xml"
			defaultSchemaName ""
			logLevel "debug"
			classpath "src/main/resources/"
		}
		diffLog {
			driver ""
			url ""
			username "cinema"
			password ""
			changeLogFile project.ext.diffChangelogFile
			referenceUrl "hibernate:spring:org.jhipster.keycloak.domain?dialect=&hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy&hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy"
			defaultSchemaName ""
			logLevel "debug"
			classpath "$buildDir/classes/java/main"
			excludeObjects "oauth_access_token, oauth_approvals, oauth_client_details, oauth_client_token, oauth_code, oauth_refresh_token"
		}
	}

	runList = project.ext.runList
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
	providedRuntime
	implementation.exclude module: "spring-boot-starter-tomcat"
}

compileJava {
	options.compilerArgs += ['-AaddGenerationDate=true'] // Specific to Hibernate JPA meta model generation processor.
	options.annotationProcessorGeneratedSourcesDirectory = file(generatedMainJava)
}

repositories {
	mavenCentral()
}

dependencies {
	//MapStruct
	compileOnly "org.mapstruct:mapstruct-jdk8:${mapstructVersion}"
	testCompileOnly "org.mapstruct:mapstruct-jdk8:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	//Swagger
	compile("io.springfox:springfox-swagger2:${swaggerVersion}") {
		exclude group: 'org.mapstruct', module: 'mapstruct'
	}
	compile "io.springfox:springfox-swagger-ui:${swaggerVersion}"

	//Spring
	implementation "org.springframework.boot:spring-boot-starter-logging"
	implementation "org.springframework.boot:spring-boot-starter-actuator"
	implementation "org.springframework.boot:spring-boot-starter-aop"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation ("org.springframework.boot:spring-boot-starter-web") {
		exclude module: "spring-boot-starter-tomcat"
	}
	implementation "org.springframework.security:spring-security-config"
	implementation "org.springframework.security:spring-security-data"
	implementation "org.springframework.security:spring-security-web"
	implementation "org.springframework.boot:spring-boot-starter-oauth2-client"
	implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
	implementation "org.springframework.security.oauth:spring-security-oauth2"
	implementation 'org.springframework.boot:spring-boot-starter-web'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'

	//Test
	testImplementation "org.springframework.security:spring-security-test"
	testImplementation "org.springframework.boot:spring-boot-test"
	testImplementation "org.junit.jupiter:junit-jupiter-engine"
	testImplementation "com.tngtech.archunit:archunit-junit5-api:${archunit_junit5_version}"
	testRuntimeOnly "com.tngtech.archunit:archunit-junit5-engine:${archunit_junit5_version}"
	testImplementation "org.assertj:assertj-core"
	testImplementation "junit:junit"
	testImplementation "org.mockito:mockito-core"
	testImplementation "org.hamcrest:hamcrest-library"
	testImplementation "com.h2database:h2"
	liquibaseRuntime "com.h2database:h2"

	annotationProcessor "org.hibernate:hibernate-jpamodelgen:${hibernetVersion}"
	implementation "org.hibernate:hibernate-entitymanager"
	implementation "org.hibernate.validator:hibernate-validator"
	implementation "org.liquibase:liquibase-core"
	liquibaseRuntime "org.liquibase:liquibase-core"
	liquibaseRuntime "org.liquibase.ext:liquibase-hibernate5:${liquibase_hibernate5_version}"
	liquibaseRuntime sourceSets.main.compileClasspath

}

//dependencyManagement {
//	imports {
//		mavenBom "org.keycloak.bom:keycloak-adapter-bom:${keycloakVersion}"
//	}
//}

//test {
//	useJUnitPlatform()
//}
