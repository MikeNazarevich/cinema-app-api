plugins {
	id 'org.springframework.boot' version '2.2.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
}

group = 'com.mikhail'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

ext {
	mapstructVersion = '1.3.0.Final'
	swaggerVersion = '2.9.2'
	junitVersion = '5.5.1'
}

test {
	useJUnitPlatform()
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//MapStruct
	compileOnly "org.mapstruct:mapstruct-jdk8:${mapstructVersion}"
	testCompileOnly "org.mapstruct:mapstruct-jdk8:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	compile("io.springfox:springfox-swagger2:${swaggerVersion}") {
		exclude group: 'org.mapstruct', module: 'mapstruct'
	}
	compile "io.springfox:springfox-swagger-ui:${swaggerVersion}"
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'

	//Test
	compile "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
	compile 'org.mockito:mockito-junit-jupiter:3.0.0'
	compile("org.springframework.boot:spring-boot-starter-test") {
		exclude group: 'junit', module: 'junit'
	}

}

test {
	useJUnitPlatform()
}
